name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: 'superuser'
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

    
jobs:
    unit-testing:
        name: Unit Testing
        container: 
          image: node:20
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        #- name: Setup NodeJS Version
        #  uses: actions/setup-node@v3
        #  with:
        #    node-version: 20
        
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json')}}
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: code-coverage
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup NodeJS Version - 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
  
      - name: Install Dependencies
        run: npm install
  
      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage
        
      - name: Archive Test Result
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

    docker:
      name: Containerization
      needs: [unit-testing, code-coverage]
      permissions: 
        packages: write
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            context: .
            push: true
            tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
    
    dev-deploy:
        if: contains(github.ref, 'feature/')
        needs: docker
        environment: 
          name: development
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: Install Kubectl CLI
            uses: azure/setup-kubectl@v4
            with:
              version: 'v1.26.0' # default is latest stable
            id: install
          
          - name: Set Kubeconfig file
            uses: azure/k8s-set-context@v4
            with:
              method: kubeconfig
              kubeconfig: ${{ secrets.KUBECONFIG }}
              
          - name: Fetch Kubernetes Cluster Details
            run: |
              kubectl version --short
          
          - name: Save Nginx Ingress Controller IP as a GITHUB Environment Variable
            run: |
                echo "INGRESS_IP=(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadbalancer.ingress[0].ip}")" >> $GITHUB_ENV

          - name: Replace Variables in Manifest Files
            uses: cschleiden/replace-tokens@v1
            with:
              tokenPrefix: '_{_'
              tokenSuffix: '_}_'
              files: '["kubernetes\development\*.yaml"]'
            env:
              NAMESPACE: ${{ vars.NAMESPACE }}
              REPLICAS: ${{ vars.REPLICAS }}
              IMAGE: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
              INGRESS_IP: ${{ env.INGRESS_IP }}
          
          - name: Check Manifest files
            run: |
              cat kubernetes\development\*.yaml

